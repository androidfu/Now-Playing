apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'hugo'
apply plugin: 'findbugs'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    lintOptions {
        abortOnError true
        lintConfig file('lint.xml')
        htmlReport true
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        resConfigs "en"
        resConfigs "nodpi", "hdpi", "xhdpi",
                "xxhdpi", "xxxhdpi"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles( \
                    getDefaultProguardFile('proguard-android.txt'),  \
                     'proguard-rules.pro',  \
                     'proguard-square-otto.pro',  \
                     'proguard-square-okhttp.pro',  \
                     'proguard-crashlytics.pro',  \
                     'proguard-butterknife.pro',  \
                     'proguard-google-analytics.pro',  \
                     'proguard-gson.pro',  \
                     'proguard-picasso.pro',  \
                     'proguard-retrofit.pro',  \
                     'proguard-ormlite.pro',  \
                     'proguard-nowplaying.pro',  \
                     'proguard-parceler.pro', \
                     'proguard-google-play-services.pro'  \
            )
        }
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles( \
                    getDefaultProguardFile('proguard-android.txt'),  \
                     'proguard-rules.pro',  \
                     'proguard-square-otto.pro',  \
                     'proguard-square-okhttp.pro',  \
                     'proguard-crashlytics.pro',  \
                     'proguard-butterknife.pro',  \
                     'proguard-google-analytics.pro',  \
                     'proguard-gson.pro',  \
                     'proguard-picasso.pro',  \
                     'proguard-retrofit.pro',  \
                     'proguard-ormlite.pro',  \
                     'proguard-nowplaying.pro',  \
                     'proguard-parceler.pro', \
                     'proguard-google-play-services.pro'  \
            )
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

// Check dependencies to ensure they're on the latest version
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.8'
    }
}
apply plugin: 'com.github.ben-manes.versions'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup:otto:1.3.5'
    compile 'com.squareup.picasso:picasso:2.3.3'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.jakewharton:butterknife:5.1.1'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.google.android.gms:play-services-base:6.5.87'
    compile 'org.parceler:parceler-api:0.2.10'
    provided 'org.parceler:parceler:0.2.10'
}

//  Usage:
//      ./gradlew app:findbugs
//      open app/build/reports/findbugs/findbugs.html
task findbugs(type: FindBugs, dependsOn: assembleDebug) {
    excludeFilter file("${project.rootDir}/config/findbugs/exclude.xml")
    classes = fileTree('build/intermediates/classes/debug/')
    // Varies based on your app build configs and flavors...
    source = fileTree('src/main/java/')
    classpath = files()
    effort = 'max'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
